"""
Irreducible representation matrices for the symels in the orientation we generate
them in. If you want to use these, make sure to rotate the molecule to the SYMEL FRAME
and not the other way around. The functions at the end are for checking that the
matrices are isomorphic to the symels with respect to the group's multiplication table,
and that they follow the Great Orthogonality Theorem.
"""

c3 = cos(π/3)
s3 = sin(π/3)
c4 = cos(π/4)
s4 = sin(π/4) # They are the same but would probably confuse me when making the matrices
c5 = cos(π/5)
s5 = sin(π/5)
c25 = cos(2π/5)
s25 = sin(2π/5)
e3 = ℯ^(2π*im/3)
ce3 = conj(ℯ^(2π*im/3))
e5 = ℯ^(2π*im/5)
e25 = ℯ^(4π*im/5)
ce5 = conj(e5)
ce25 = conj(e25)
e6 = ℯ^(2π*im/6)
ce6 = conj(e6)
e7 = ℯ^(2π*im/7)
e72 = ℯ^(4π*im/7)
e73 = ℯ^(6π*im/7)
ce7 = conj(e7)
ce72 = conj(e72)
ce73 = conj(e73)
e8 = ℯ^(2π*im/8)
ce8 = conj(e8)

allen_map_I = [1, 6, 18, 24, 12, 13, 25, 19, 7, 9, 21, 15, 3, 2, 14, 20, 8, 11, 23, 17, 5, 10, 22, 16, 4,
             40, 30, 29, 39, 41, 31, 38, 28, 26, 36, 27, 37, 43, 33, 44, 34, 32, 42, 45, 35,
             56, 51, 60, 54, 50, 58, 53, 49, 57, 55, 48, 59, 46, 47, 52]
allen_map_Ih = [1, 6, 18, 24, 12, 13, 25, 19, 7, 9, 21, 15, 3, 2, 14, 20, 8, 11, 23, 17, 5, 10, 22, 16, 4,
             40, 30, 29, 39, 41, 31, 38, 28, 26, 36, 27, 37, 43, 33, 44, 34, 32, 42, 45, 35,
             56, 51, 60, 54, 50, 58, 53, 49, 57, 55, 48, 59, 46, 47, 52,
             61, 68, 80, 82, 70, 71, 83, 81, 69, 67, 79, 77, 65, 64, 76, 78, 66, 73, 85, 75, 63, 72, 84, 74, 62, 
             101, 91, 88, 98, 100, 90, 99, 89, 87, 97, 86, 96, 102, 92, 105, 95, 93, 103, 104, 94,
             116, 111, 120, 114, 110, 118, 113, 109, 117, 115, 108, 119, 106, 107, 112]


irrm_C1 = Dict("A"=>[[1]])
irrm_Cs = Dict("A'"=>[[1],[1]], "A''"=>[[1],[-1]])
irrm_Ci = Dict("Ag"=>[[1],[1]], "Au"=>[[1],[-1]])
irrm_C2 = Dict("A"=>[[1],[1]], "B"=>[[1],[-1]])
irrm_C3 = Dict(
    "A"  => [[1],[1],[1]],
    "E_1" => [[1],[e3],[ce3]],
    "E_2" => [[1],[ce3],[e3]])

irrm_C4 = Dict(
    "A"  => [[1],[1],[1],[1]],
    "B"  => [[1],[-1],[1],[-1]],
    "E_1" => [[1],[im],[-1],[-im]],
    "E_2" => [[1],[-im],[-1],[im]])

irrm_C5 = Dict(
    "A"   => [[1],[1],[1],[1],[1]],
    "E1_1" => [[1],[e5],[e25],[ce25],[ce5]],
    "E1_2" => [[1],[ce5],[ce25],[e25],[e5]],
    "E2_1" => [[1],[e25],[ce5],[e5],[ce25]],
    "E2_2" => [[1],[ce25],[e5],[ce5],[e25]])

irrm_C6 = Dict(
    "A"   => [[1],[1],[1],[1],[1],[1]],
    "B"   => [[1],[-1],[1],[-1],[1],[-1]],
    "E1_1" => [[1],[e6],[-ce6],[-1],[-e6],[ce6]],
    "E1_2" => [[1],[ce6],[-e6],[-1],[-ce6],[e6]],
    "E2_1" => [[1],[-ce6],[-e6],[1],[-ce6],[-e6]],
    "E2_2" => [[1],[-e6],[-ce6],[1],[-e6],[-ce6]])

irrm_C7 = Dict(
    "A"   => [[1],[1],[1],[1],[1],[1],[1]],
    "E1_1" => [[1],[e7],[e72],[e73],[ce73],[ce72],[ce7]],
    "E1_2" => [[1],[ce7],[ce72],[ce73],[e73],[e72],[e7]],
    "E2_1" => [[1],[e72],[ce73],[ce7],[e7],[e73],[ce72]],
    "E2_2" => [[1],[ce72],[e73],[e7],[ce7],[ce73],[e72]],
    "E3_1" => [[1],[e73],[ce7],[e72],[ce72],[e7],[ce73]],
    "E3_2" => [[1],[ce73],[e7],[ce72],[e72],[ce7],[e73]])

irrm_C8 = Dict(
    "A"   => [[1],[1],[1],[1],[1],[1],[1],[1]],
    "B"   => [[1],[-1],[1],[-1],[1],[-1],[1],[-1]],
    "E1_1" => [[1],  [e8], [im],[-ce8],[-1], [-e8],[-im], [ce8]],
    "E1_2" => [[1], [ce8],[-im], [-e8],[-1],[-ce8], [im],  [e8]],
    "E2_1" => [[1],  [im], [-1], [-im], [1],  [im], [-1], [-im]],
    "E2_2" => [[1], [-im], [-1],  [im], [1], [-im], [-1],  [im]],
    "E3_1" => [[1], [-e8], [im], [ce8],[-1],  [e8],[-im],[-ce8]],
    "E3_2" => [[1],[-ce8],[-im],  [e8],[-1], [ce8], [im], [-e8]])

irrm_S4 = Dict(
    "A"  => [[1],[1],[1],[1]],
    "B"  => [[1],[1],[-1],[-1]],
    "E_1" => [[1],[-1],[im],[-im]],
    "E_2" => [[1],[-1],[-im],[im]])

irrm_S6 = Dict(
    "Ag"  => [[1],[1],[1],[1],[1],[1]],
    "Eg1" => [[1],[1],[e3],[ce3],[ce3],[e3]],
    "Eg2" => [[1],[1],[ce3],[e3],[e3],[ce3]],
    "Au"  => [[1],[-1],[1],[1],[-1],[-1]],
    "Eu1" => [[1],[-1],[e3],[ce3],[-ce3],[-e3]],
    "Eu2" => [[1],[-1],[ce3],[e3],[-e3],[-ce3]])

irrm_S8 = Dict(
    "A"   => [[1],[1],[1],[1],[1],[1],[1],[1]],
    "B"   => [[1],[1],[1],[1],[-1],[-1],[-1],[-1]],
    "E1_1" => [[1], [im],[-1],[-im],  [e8],[-ce8], [-e8], [ce8]],
    "E1_2" => [[1],[-im],[-1], [im], [ce8], [-e8],[-ce8],  [e8]],
    "E2_1" => [[1], [-1], [1], [-1],  [im], [-im],  [im], [-im]],
    "E2_2" => [[1], [-1], [1], [-1], [-im],  [im], [-im],  [im]],
    "E3_1" => [[1],[-im],[-1], [im],[-ce8],  [e8], [ce8], [-e8]],
    "E3_2" => [[1], [im],[-1],[-im], [-e8], [ce8],  [e8],[-ce8]])

irrm_C2h = Dict(
    "Ag"=>[[1],[1],[1],[1]],
    "Bg"=>[[1],[-1],[1],[-1]],
    "Au"=>[[1],[-1],[-1],[1]],
    "Bu"=>[[1],[1],[-1],[-1]])
irrm_C3h = Dict(
    "A'"   => [[1],[1],[1],[1],[1],[1]],
    "E'1"  => [[1],[1],[e3],[ce3],[e3],[ce3]],
    "E'2"  => [[1],[1],[ce3],[e3],[ce3],[e3]],
    "A''"  => [[1],[-1],[1],[1],[-1],[-1]],
    "E''1" => [[1],[-1],[e3],[ce3],[-e3],[-ce3]],
    "E''2" => [[1],[-1],[ce3],[e3],[-ce3],[-e3]])

irrm_C4h = Dict(
    "Ag"  => [[1], [1], [1],  [1], [1],  [1],  [1],  [1]],
    "Bg"  => [[1], [1], [1], [-1], [1], [-1], [-1], [-1]],
    "Eg1" => [[1],[-1], [1], [im],[-1],[-im],[-im], [im]],
    "Eg2" => [[1],[-1], [1],[-im],[-1], [im], [im],[-im]],
    "Au"  => [[1],[-1],[-1],  [1], [1],  [1], [-1], [-1]],
    "Bu"  => [[1],[-1],[-1], [-1], [1], [-1],  [1],  [1]],
    "Eu1" => [[1], [1],[-1], [im],[-1],[-im], [im],[-im]],
    "Eu2" => [[1], [1],[-1],[-im],[-1], [im],[-im], [im]])

irrm_C5h = Dict(
    "A'"    => [[1], [1],    [1],    [1],    [1],    [1],    [1],    [1],    [1],    [1]],
    "E1'1"  => [[1], [1],   [e5],  [e25], [ce25],  [ce5],   [e5],  [e25], [ce25],  [ce5]],
    "E1'2"  => [[1], [1],  [ce5], [ce25],  [e25],   [e5],  [ce5], [ce25],  [e25],   [e5]],
    "E2'1"  => [[1], [1],  [e25],  [ce5],   [e5], [ce25],  [e25],  [ce5],   [e5], [ce25]],
    "E2'2"  => [[1], [1], [ce25],   [e5],  [ce5],  [e25], [ce25],   [e5],  [ce5],  [e25]],
    "A''"   => [[1],[-1],    [1],    [1],    [1],    [1],   [-1],   [-1],   [-1],   [-1]],
    "E1''1" => [[1],[-1],   [e5],  [e25], [ce25],  [ce5],  [-e5], [-e25],[-ce25], [-ce5]],
    "E1''2" => [[1],[-1],  [ce5], [ce25],  [e25],   [e5], [-ce5],[-ce25], [-e25],  [-e5]],
    "E2''1" => [[1],[-1],  [e25],  [ce5],   [e5], [ce25], [-e25], [-ce5],  [-e5],[-ce25]],
    "E2''2" => [[1],[-1], [ce25],   [e5],  [ce5],  [e25],[-ce25],  [-e5], [-ce5], [-e25]])

irrm_C6h = Dict(
    "Ag"   => [[1], [1], [1],   [1],   [1], [1],   [1],   [1],   [1],   [1],   [1],   [1]],
    "Bg"   => [[1],[-1], [1],  [-1],   [1],[-1],   [1],  [-1],   [1],  [-1],  [-1],   [1]],
    "E1g1" => [[1],[-1], [1],  [e6],[-ce6],[-1], [-e6], [ce6], [-e6], [ce6],  [e6],[-ce6]],
    "E1g2" => [[1],[-1], [1], [ce6], [-e6],[-1],[-ce6],  [e6],[-ce6],  [e6], [ce6], [-e6]],
    "E2g1" => [[1], [1], [1],[-ce6], [-e6], [1],[-ce6], [-e6],[-ce6], [-e6],[-ce6], [-e6]],
    "E2g2" => [[1], [1], [1], [-e6],[-ce6], [1], [-e6],[-ce6], [-e6],[-ce6], [-e6],[-ce6]],
    "Au"   => [[1],[-1],[-1],   [1],   [1], [1],   [1],   [1],  [-1],  [-1],  [-1],  [-1]],
    "Bu"   => [[1], [1],[-1],  [-1],   [1],[-1],   [1],  [-1],  [-1],   [1],   [1],  [-1]],
    "E1u1" => [[1], [1],[-1],  [e6],[-ce6],[-1], [-e6], [ce6],  [e6],[-ce6], [-e6], [ce6]],
    "E1u2" => [[1], [1],[-1], [ce6], [-e6],[-1],[-ce6],  [e6], [ce6], [-e6],[-ce6],  [e6]],
    "E2u1" => [[1],[-1],[-1],[-ce6], [-e6], [1],[-ce6], [-e6], [ce6],  [e6], [ce6],  [e6]],
    "E2u2" => [[1],[-1],[-1], [-e6],[-ce6], [1], [-e6],[-ce6],  [e6], [ce6],  [e6], [ce6]])

irrm_C2v = Dict(
    "A1" => [[1],[1],[1],[1]],
    "A2" => [[1],[1],[-1],[-1]],
    "B1" => [[1],[-1],[1],[-1]],
    "B2" => [[1],[-1],[-1],[1]])
irrm_C3v = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[-1],[-1],[-1]],
    "E"  => [[1.0 0.0;0.0 1.0], [-c3 -s3; s3 -c3], [-c3 s3; -s3 -c3], [1.0 0.0;0.0 -1], [-c3 -s3; -s3 c3], [-c3 s3; s3 c3]])

irrm_C4v = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[1],[-1],[-1],[-1],[-1]],
    "B1" => [[1],[-1],[1],[-1],[1],[1],[-1],[-1]],
    "B2" => [[1],[-1],[1],[-1],[-1],[-1],[1],[1]],
    "E"  => [[1 0;0 1],[0 -1; 1 0],[-1 0; 0 -1],[0 1; -1 0],[1 0; 0 -1],[-1 0; 0 1],[0 1; 1 0],[0 -1; -1 0]])

irrm_C5v = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1]],
    "E1" => [[1 0;0 1],[c25 -s25; s25 c25],[-c5 -s5; s5 -c5],[-c5 s5; -s5 -c5],[c25 s25; -s25 c25],
             [1 0;0 -1],[-c5 s5; s5 c5],[c25 -s25; -s25 -c25],[c25 s25; s25 -c25],[-c5 -s5; -s5 c5]],
    "E2" => [[1 0;0 1],[-c5 -s5; s5 -c5],[c25 s25; -s25 c25],[c25 -s25; s25 c25],[-c5 s5; -s5 -c5],
             [1 0;0 -1],[c25 -s25; -s25 -c25],[-c5 -s5; -s5 c5],[-c5 s5; s5 c5],[c25 s25; s25 -c25]])

irrm_C6v = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "B1" => [[1],[-1],[1],[-1],[1],[-1],[1],[1],[1],[-1],[-1],[-1]],
    "B2" => [[1],[-1],[1],[-1],[1],[-1],[-1],[-1],[-1],[1],[1],[1]],
    "E1" => [[1 0;0 1],[c3 -s3;s3 c3],[-c3 -s3;s3 -c3],[-1 0;0 -1],[-c3 s3;-s3 -c3],[c3 s3;-s3 c3],
             [1 0;0 -1],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3]],
    "E2" => [[1 0;0 1],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[1 0;0 1],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],
             [1 0;0 -1],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[-c3 -s3;-s3 c3],[1 0;0 -1],[-c3 s3;s3 c3]])

irrm_D2 = Dict(
    "A" => [[1],[1],[1],[1]],
    "B1" => [[1],[1],[-1],[-1]],
    "B2" => [[1],[-1],[-1],[1]],
    "B3" => [[1],[-1],[1],[-1]]) # To preserve Cotton ordering, our symels are zxy and Cotton's are zyx (Essentially swap B2 and B3)
irrm_D3 = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[-1],[-1],[-1]],
    "E" => [[1 0;0 1],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 s3;s3 c3]])
irrm_D4 = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[1],[-1],[-1],[-1],[-1]],
    "B1" => [[1],[-1],[1],[-1],[1],[1],[-1],[-1]],
    "B2" => [[1],[-1],[1],[-1],[-1],[-1],[1],[1]],
    "E" => [[1 0;0 1],[0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],[1 0;0 -1],[-1 0;0 1],[0 1;1 0],[0 -1;-1 0]])
irrm_D5 = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1]],
    "E1" => [[1 0;0 1],[c25 -s25; s25 c25],[-c5 -s5; s5 -c5],[-c5 s5; -s5 -c5],[c25 s25; -s25 c25],
             [1 0;0 -1],[-c5 s5; s5 c5],[c25 -s25; -s25 -c25],[c25 s25; s25 -c25],[-c5 -s5; -s5 c5]],
    "E2" => [[1 0;0 1],[-c5 -s5; s5 -c5],[c25 s25; -s25 c25],[c25 -s25; s25 c25],[-c5 s5; -s5 -c5],
             [1 0;0 -1],[c25 -s25; -s25 -c25],[-c5 -s5; -s5 c5],[-c5 s5; s5 c5],[c25 s25; s25 -c25]])
irrm_D6 = Dict(
    "A1" => [ [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1]],
    "A2" => [ [1], [1], [1], [1], [1], [1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "B1" => [ [1],[-1], [1],[-1], [1],[-1], [1], [1], [1],[-1],[-1],[-1]],
    "B2" => [ [1],[-1], [1],[-1], [1],[-1],[-1],[-1],[-1], [1], [1], [1]],
    "E1" => [[1 0;0 1],[c3 -s3;s3 c3],[-c3 -s3;s3 -c3],[-1 0;0 -1],[-c3 s3;-s3 -c3],[c3 s3;-s3 c3],
             [1 0;0 -1],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3]],
    "E2" => [[1 0;0 1],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[1 0;0 1],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],
             [-1 0;0 1],[c3 -s3;-s3 -c3],[c3 s3;s3 -c3],[c3 s3;s3 -c3],[-1 0; 0 1],[c3 -s3;-s3 -c3]])

irrm_D8 = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1],[1],[1],
             [1],[1],[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[1],[1],[1],[1],[1],
             [-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "B1" => [[1],[-1],[1],[-1],[1],[-1],[1],[-1],
             [1],[1],[1],[1],[-1],[-1],[-1],[-1]],
    "B2" => [[1],[-1],[1],[-1],[1],[-1],[1],[-1],
             [-1],[-1],[-1],[-1],[1],[1],[1],[1]],
    "E1" => [[1 0;0 1],[c4 -s4;s4 c4],[0 -1;1 0],[-c4 -s4;s4 -c4],[-1 0;0 -1],[-c4 s4;-s4 -c4],[0 1;-1 0],[c4 s4;-s4 c4],
             [1 0;0 -1],[0 1;1 0],[-1 0;0 1],[0 -1;-1 0],[c4 s4;s4 -c4],[-c4 s4;s4 c4],[-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4]],
    "E2" => [[1 0;0 1],[0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],[1 0;0 1],[0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],
             [1 0;0 -1],[-1 0;0 1],[1 0;0 -1],[-1 0;0 1],[0 1;1 0],[0 -1;-1 0],[0 1;1 0],[0 -1;-1 0]],
    "E3" => [[1 0;0 1],[-c4 s4;-s4 -c4],[0 -1;1 0],[c4 s4;-s4 c4],[-1 0;0 -1],[c4 -s4;s4 c4],[0 1;-1 0],[-c4 -s4;s4 -c4],
             [-1 0;0 1],[0 -1;-1 0],[1 0;0 -1],[0 1;1 0],[c4 s4;s4 -c4],[-c4 s4;s4 c4],[-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4]])

irrm_D2h = Dict(
    "Ag"  => [ [1], [1], [1], [1], [1], [1], [1], [1]],
    "B1g" => [ [1], [1], [1], [1],[-1],[-1],[-1],[-1]],
    "B2g" => [ [1],[-1], [1],[-1],[-1], [1], [1],[-1]],
    "B3g" => [ [1],[-1], [1],[-1], [1],[-1],[-1], [1]],
    "Au"  => [ [1],[-1],[-1], [1], [1], [1],[-1],[-1]],
    "B1u" => [ [1],[-1],[-1], [1],[-1],[-1], [1], [1]],
    "B2u" => [ [1], [1],[-1],[-1],[-1], [1],[-1], [1]],
    "B3u" => [ [1], [1],[-1],[-1], [1],[-1], [1],[-1]]) # Cotton ordering is different because I put x in front of y...
irrm_D3h = Dict(
    "A1'" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2'" => [[1],[1],[1],[1],[-1],[-1],[-1],[1],[1],[-1],[-1],[-1]],
    "E'"  => [[1 0;0 1],[1 0;0 1],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 s3;s3 c3],
             [-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 s3;s3 c3]],
    "A1''" => [[1],[-1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1]],
    "A1''" => [[1],[-1],[1],[1],[-1],[-1],[-1],[-1],[-1],[1],[1],[1]],
    "E''" => [[1 0;0 1],[-1 0;0 -1],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 s3;s3 c3],
             [c3 s3;-s3 c3],[c3 -s3;s3 c3],[-1 0;0 1],[c3 s3;s3 -c3],[c3 -s3;-s3 -c3]])
irrm_D4h = Dict(
    "A1g" => [ [1], [1], [1],  [1], [1], [1], [1], [1], [1], [1],   [1], [1], [1], [1], [1], [1]],
    "A2g" => [ [1], [1], [1],  [1], [1], [1],[-1],[-1],[-1],[-1],   [1], [1],[-1],[-1],[-1],[-1]],
    "B1g" => [ [1], [1], [1], [-1], [1],[-1], [1], [1],[-1],[-1],  [-1],[-1], [1], [1],[-1],[-1]],
    "B2g" => [ [1], [1], [1], [-1], [1],[-1],[-1],[-1], [1], [1],  [-1],[-1],[-1],[-1], [1], [1]],
    "Eg" => [[1 0;0 1],[-1 0;0 -1],[1 0;0 1],
             [0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],[1 0;0 -1],[-1 0;0 1],[0 1;1 0],[0 -1;-1 0],
             [0 1;-1 0],[0 -1;1 0],[-1 0;0 1],[1 0;0 -1],[0 -1;-1 0],[0 1;1 0]],
    "A1u" => [ [1],[-1],[-1],  [1], [1], [1], [1], [1], [1], [1], [-1],[-1],[-1],[-1],[-1],[-1]],
    "A2u" => [ [1],[-1],[-1],  [1], [1], [1],[-1],[-1],[-1],[-1], [-1],[-1], [1], [1], [1], [1]],
    "B1u" => [ [1],[-1],[-1], [-1], [1],[-1], [1], [1],[-1],[-1],  [1], [1],[-1],[-1], [1], [1]],
    "B2u" => [ [1],[-1],[-1], [-1], [1],[-1],[-1],[-1], [1], [1],  [1], [1], [1], [1],[-1],[-1]],
    "Eu" => [[1 0;0 1],[1 0;0 1],[-1 0;0 -1],
             [0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],[1 0;0 -1],[-1 0;0 1],[0 1;1 0],[0 -1;-1 0],
             [0 -1;1 0],[0 1;-1 0],[1 0;0 -1],[-1 0;0 1],[0 1;1 0],[0 -1;-1 0]])
irrm_D5h = Dict(
    "A1'" => [ [1], [1],  [1], [1], [1], [1], [1], [1], [1], [1], [1],
                          [1], [1], [1], [1], [1], [1], [1], [1], [1]],
    "A2'" => [ [1], [1],  [1], [1], [1], [1],[-1],[-1],[-1],[-1],[-1],
                          [1], [1], [1], [1],[-1],[-1],[-1],[-1],[-1]],
    "E1'" => [[1 0;0 1],[1 0;0 1], # E, σh
              [c25 -s25; s25 c25],[-c5 -s5; s5 -c5],[-c5 s5; -s5 -c5],[c25 s25; -s25 c25], # C5s
              [1 0;0 -1],[-c5 s5; s5 c5],[c25 -s25; -s25 -c25],[c25 s25; s25 -c25],[-c5 -s5; -s5 c5],
              [c25 -s25; s25 c25],[-c5 -s5; s5 -c5],[-c5 s5; -s5 -c5],[c25 s25; -s25 c25],
              [1 0;0 -1],[-c5 s5; s5 c5],[c25 -s25; -s25 -c25],[c25 s25; s25 -c25],[-c5 -s5; -s5 c5]],
    "E2'" => [[1 0;0 1],[1 0;0 1],
              [-c5 -s5; s5 -c5],[c25 s25; -s25 c25],[c25 -s25; s25 c25],[-c5 s5; -s5 -c5],
              [1 0;0 -1],[c25 -s25; -s25 -c25],[-c5 -s5; -s5 c5],[-c5 s5; s5 c5],[c25 s25; s25 -c25],
              [-c5 -s5; s5 -c5],[c25 s25; -s25 c25],[c25 -s25; s25 c25],[-c5 s5; -s5 -c5],
              [1 0;0 -1],[c25 -s25; -s25 -c25],[-c5 -s5; -s5 c5],[-c5 s5; s5 c5],[c25 s25; s25 -c25]],
    "A1''"=> [ [1],[-1],  [1], [1], [1], [1], [1], [1], [1], [1], [1],
                         [-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "A2''"=> [ [1],[-1],  [1], [1], [1], [1],[-1],[-1],[-1],[-1],[-1],
                         [-1],[-1],[-1],[-1], [1], [1], [1], [1], [1]],
    "E1''"=> [[1 0;0 1],[-1 0;0 -1], # E, σh
              [c25 -s25; s25 c25],[-c5 -s5; s5 -c5],[-c5 s5; -s5 -c5],[c25 s25; -s25 c25], # C5s
              [1 0;0 -1],[-c5 s5; s5 c5],[c25 -s25; -s25 -c25],[c25 s25; s25 -c25],[-c5 -s5; -s5 c5],
              [-c25 s25; -s25 -c25],[c5 s5; -s5 c5],[c5 -s5; s5 c5],[-c25 -s25; s25 -c25],
              [-1 0;0 1],[c5 -s5; -s5 -c5],[-c25 s25; s25 c25],[-c25 -s25; -s25 c25],[c5 s5; s5 -c5]],
    "E2''"=> [[1 0;0 1],[-1 0;0 -1],
              [-c5 -s5; s5 -c5],[c25 s25; -s25 c25],[c25 -s25; s25 c25],[-c5 s5; -s5 -c5],
              [1 0;0 -1],[c25 -s25; -s25 -c25],[-c5 -s5; -s5 c5],[-c5 s5; s5 c5],[c25 s25; s25 -c25],
              [c5 s5; -s5 c5],[-c25 -s25; s25 -c25],[-c25 s25; -s25 -c25],[c5 -s5; s5 c5],
              [-1 0;0 1],[-c25 s25; s25 c25],[c5 s5; s5 -c5],[c5 -s5; -s5 -c5],[-c25 -s25; -s25 c25]])
irrm_D6h = Dict(
    "A1g" => [ [1], [1], [1], # E, σh, i
               [1], [1], [1], [1], [1], # Cns
               [1], [1], [1], [1], [1], [1], # C2s
               [1], [1], [1], [1], # Sns
               [1], [1], [1], [1], [1], [1]], # σs
    "A2g" => [ [1], [1], [1], # E, σh, i
               [1], [1], [1], [1], [1], # Cns
              [-1],[-1],[-1],[-1],[-1],[-1], # C2s
               [1], [1], [1], [1], # Sns
              [-1],[-1],[-1],[-1],[-1],[-1]], # σs
    "B1g" => [ [1],[-1], [1], # E, σh, i
              [-1], [1],[-1], [1],[-1], # Cns
               [1], [1], [1],[-1],[-1],[-1], # C2s
               [1],[-1],[-1], [1], # Sns
              [-1],[-1],[-1], [1], [1], [1]], # σs
    "B2g" => [ [1],[-1], [1], # E, σh, i
              [-1], [1],[-1], [1],[-1], # Cns
              [-1],[-1],[-1], [1], [1], [1], # C2s
               [1],[-1],[-1], [1], # Sns
               [1], [1], [1],[-1],[-1],[-1]], # σs
    "E1g" => [[1 0;0 1],[-1 0;0 -1],[1 0;0 1],
              [c3 -s3;s3 c3],[-c3 -s3;s3 -c3],[-1 0;0 -1],[-c3 s3;-s3 -c3],[c3 s3;-s3 c3],
              [1 0;0 -1],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3],
              [-c3 s3;-s3 -c3],[c3 s3;-s3 c3],[c3 -s3;s3 c3],[-c3 -s3;s3 -c3],
              #[c3 -s3;s3 c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[c3 s3;-s3 c3],
              [-1 0;0 1],[c3 -s3;-s3 -c3],[c3 s3;s3 -c3],[-c3 -s3;-s3 c3],[1 0;0 -1],[-c3 s3;s3 c3]],
              #[1 0;0 -1],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3]],
    "E2g" => [[1 0;0 1],[1 0;0 1],[1 0;0 1],
              [-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[1 0;0 1],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],
              [-1 0;0 1],[c3 -s3;-s3 -c3],[c3 s3;s3 -c3],[c3 s3;s3 -c3],[-1 0; 0 1],[c3 -s3;-s3 -c3],
              [-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],
              [-1 0;0 1],[c3 -s3;-s3 -c3],[c3 s3;s3 -c3],[c3 s3;s3 -c3],[-1 0; 0 1],[c3 -s3;-s3 -c3]],
    "A1u" => [ [1],[-1],[-1], # E, σh, i
               [1], [1], [1], [1], [1], # Cns
               [1], [1], [1], [1], [1], [1], # C2s
              [-1],[-1],[-1],[-1], # Sns
              [-1],[-1],[-1],[-1],[-1],[-1]], # σs
    "A2u" => [ [1],[-1],[-1], # E, σh, i
               [1], [1], [1], [1], [1], # Cns
              [-1],[-1],[-1],[-1],[-1],[-1], # C2s
              [-1],[-1],[-1],[-1], # Sns
               [1], [1], [1], [1], [1], [1]], # σs
    "B1u" => [ [1], [1],[-1], # E, σh, i
              [-1], [1],[-1], [1],[-1], # Cns
               [1], [1], [1],[-1],[-1],[-1], # C2s
              [-1], [1], [1],[-1], # Sns
               [1], [1], [1],[-1],[-1],[-1]], # σs
    "B2u" => [ [1], [1],[-1], # E, σh, i
              [-1], [1],[-1], [1],[-1], # Cns
              [-1],[-1],[-1], [1], [1], [1], # C2s
              [-1], [1], [1],[-1], # Sns
              [-1],[-1],[-1], [1], [1], [1]], # σs
    "E1u" => [[1 0;0 1],[1 0;0 1],[-1 0;0 -1],
              [c3 -s3;s3 c3],[-c3 -s3;s3 -c3],[-1 0;0 -1],[-c3 s3;-s3 -c3],[c3 s3;-s3 c3],
              [1 0;0 -1],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3],
              [c3 -s3;s3 c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[c3 s3;-s3 c3],
              #[c3 -s3;s3 c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[c3 s3;-s3 c3],
              [1 0;0 -1],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3]],
              #[1 0;0 -1],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3]],
    "E2u" => [[1 0;0 1],[-1 0;0 -1],[-1 0;0 -1],
              [-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[1 0;0 1],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],
              [-1 0;0 1],[c3 -s3;-s3 -c3],[c3 s3;s3 -c3],[c3 s3;s3 -c3],[-1 0; 0 1],[c3 -s3;-s3 -c3],
              [c3 -s3;s3 c3],[c3 s3;-s3 c3],[c3 -s3;s3 c3],[c3 s3;-s3 c3],
              [1 0;0 -1],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[-c3 -s3;-s3 c3],[1 0; 0 -1],[-c3 s3;s3 c3]])
irrm_D8h = Dict(
    "A1g" => [[1],[1],[1], # E, σh, i
              [1],[1],[1],[1],[1],[1],[1], # C8s
              [1],[1],[1],[1], # C2'
              [1],[1],[1],[1], # C2''
              [1],[1],[1],[1],[1],[1], # S8
              [1],[1],[1],[1], # σvs
              [1],[1],[1],[1]], # σds
    "A2g" => [[1],[1],[1],
              [1],[1],[1],[1],[1],[1],[1],
              [-1],[-1],[-1],[-1],
              [-1],[-1],[-1],[-1],
              [1],[1],[1],[1],[1],[1],
              [-1],[-1],[-1],[-1],
              [-1],[-1],[-1],[-1]],
    "B1g" => [[1],[1],[1],
              [-1],[1],[-1],[1],[-1],[1],[-1],
              [1],[1],[1],[1],
              [-1],[-1],[-1],[-1],
              [-1],[1],[-1],[-1],[1],[-1],
              [1],[1],[1],[1],
              [-1],[-1],[-1],[-1]],
    "B2g" => [[1],[1],[1],
              [-1],[1],[-1],[1],[-1],[1],[-1],
              [-1],[-1],[-1],[-1],
              [1],[1],[1],[1],
              [-1],[1],[-1],[-1],[1],[-1],
              [-1],[-1],[-1],[-1],
              [1],[1],[1],[1]],
    "E1g" => [[1 0;0 1],[-1 0;0 -1],[1 0;0 1],
              [c4 -s4;s4 c4],[0 -1;1 0],[-c4 -s4;s4 -c4],[-1 0;0 -1],[-c4 s4;-s4 -c4],[0 1;-1 0],[c4 s4;-s4 c4],
              [1 0;0 -1],[0 1;1 0],[-1 0;0 1],[0 -1;-1 0],
              [c4 s4;s4 -c4],[-c4 s4;s4 c4],[-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4],
              [-c4 s4;-s4 -c4],[0 1;-1 0],[c4 s4;-s4 c4],[c4 -s4;s4 c4],[0 -1;1 0],[-c4 -s4;s4 -c4],
              [-1 0;0 1],[0 -1;-1 0],[1 0;0 -1],[0 1;1 0],
              [-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4],[c4 s4;s4 -c4],[-c4 s4;s4 c4]],
    "E2g" => [[1 0;0 1],[1 0;0 1],[1 0;0 1],
              [0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],[1 0;0 1],[0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],
              [1 0;0 -1],[-1 0;0 1],[1 0;0 -1],[-1 0;0 1],
              [0 1;1 0],[0 -1;-1 0],[0 1;1 0],[0 -1;-1 0],
              [0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],[0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],
              [1 0;0 -1],[-1 0;0 1],[1 0;0 -1],[-1 0;0 1],
              [0 1;1 0],[0 -1;-1 0],[0 1;1 0],[0 -1;-1 0]],
    "E3g" => [[1 0;0 1],[-1 0;0 -1],[1 0;0 1],
              [-c4 s4;-s4 -c4],[0 -1;1 0],[c4 s4;-s4 c4],[-1 0;0 -1],[c4 -s4;s4 c4],[0 1;-1 0],[-c4 -s4;s4 -c4],
              [-1 0;0 1],[0 -1;-1 0],[1 0;0 -1],[0 1;1 0],
              [c4 s4;s4 -c4],[-c4 s4;s4 c4],[-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4],
              [c4 -s4;s4 c4],[0 1;-1 0],[-c4 -s4;s4 -c4],[-c4 s4;-s4 -c4],[0 -1;1 0],[c4 s4;-s4 c4],
              [1 0;0 -1],[0 1;1 0],[-1 0;0 1],[0 -1;-1 0],
              [-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4],[c4 s4;s4 -c4],[-c4 s4;s4 c4]],
    "A1u" => [[1],[-1],[-1], # E, σh, i
              [1],[1],[1],[1],[1],[1],[1], # C8s
              [1],[1],[1],[1], # C2'
              [1],[1],[1],[1], # C2''
              [-1],[-1],[-1],[-1],[-1],[-1], # S8
              [-1],[-1],[-1],[-1], # σvs
              [-1],[-1],[-1],[-1]], # σds
    "A2u" => [[1],[-1],[-1],
              [1],[1],[1],[1],[1],[1],[1],
              [-1],[-1],[-1],[-1],
              [-1],[-1],[-1],[-1],
              [-1],[-1],[-1],[-1],[-1],[-1],
              [1],[1],[1],[1],
              [1],[1],[1],[1]],
    "B1u" => [[1],[-1],[-1],
              [-1],[1],[-1],[1],[-1],[1],[-1],
              [1],[1],[1],[1],
              [-1],[-1],[-1],[-1],
              [1],[-1],[1],[1],[-1],[1],
              [-1],[-1],[-1],[-1],
              [1],[1],[1],[1]],
    "B2u" => [[1],[-1],[-1],
              [-1],[1],[-1],[1],[-1],[1],[-1],
              [-1],[-1],[-1],[-1],
              [1],[1],[1],[1],
              [1],[-1],[1],[1],[-1],[1],
              [1],[1],[1],[1],
              [-1],[-1],[-1],[-1]],
    "E1u" => [[1 0;0 1],[1 0;0 1],[-1 0;0 -1],
              [c4 -s4;s4 c4],[0 -1;1 0],[-c4 -s4;s4 -c4],[-1 0;0 -1],[-c4 s4;-s4 -c4],[0 1;-1 0],[c4 s4;-s4 c4],
              [1 0;0 -1],[0 1;1 0],[-1 0;0 1],[0 -1;-1 0],
              [c4 s4;s4 -c4],[-c4 s4;s4 c4],[-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4],
              [c4 -s4;s4 c4],[0 -1;1 0],[-c4 -s4;s4 -c4],[-c4 s4;-s4 -c4],[0 1;-1 0],[c4 s4;-s4 c4],
              [1 0;0 -1],[0 1;1 0],[-1 0;0 1],[0 -1;-1 0],
              [c4 s4;s4 -c4],[-c4 s4;s4 c4],[-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4]],
    "E2u" => [[1 0;0 1],[-1 0;0 -1],[-1 0;0 -1],
              [0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],[1 0;0 1],[0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],
              [1 0;0 -1],[-1 0;0 1],[1 0;0 -1],[-1 0;0 1],
              [0 1;1 0],[0 -1;-1 0],[0 1;1 0],[0 -1;-1 0],
              [0 1;-1 0],[1 0;0 1],[0 -1;1 0],[0 1;-1 0],[1 0;0 1],[0 -1;1 0],
              [-1 0;0 1],[1 0;0 -1],[-1 0;0 1],[1 0;0 -1],
              [0 -1;-1 0],[0 1;1 0],[0 -1;-1 0],[0 1;1 0]],
    "E3u" => [[1 0;0 1],[1 0;0 1],[-1 0;0 -1],
              [-c4 s4;-s4 -c4],[0 -1;1 0],[c4 s4;-s4 c4],[-1 0;0 -1],[c4 -s4;s4 c4],[0 1;-1 0],[-c4 -s4;s4 -c4],
              [-1 0;0 1],[0 -1;-1 0],[1 0;0 -1],[0 1;1 0],
              [c4 s4;s4 -c4],[-c4 s4;s4 c4],[-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4],
              [-c4 s4;-s4 -c4],[0 -1;1 0],[c4 s4;-s4 c4],[c4 -s4;s4 c4],[0 1;-1 0],[-c4 -s4;s4 -c4],
              [-1 0;0 1],[0 -1;-1 0],[1 0;0 -1],[0 1;1 0],
              [c4 s4;s4 -c4],[-c4 s4;s4 c4],[-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4]])

irrm_D2d = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[1],[-1],[-1],[-1],[-1]],
    "B1" => [[1],[1],[-1],[-1],[1],[1],[-1],[-1]],
    "B2" => [[1],[1],[-1],[-1],[-1],[-1],[1],[1]],
    "E"  => [[1 0;0 1],[-1 0;0 -1],[0 -1;1 0],[0 1;-1 0],[1 0;0 -1],[-1 0;0 1],[0 1;1 0],[0 -1;-1 0]])

irrm_D3d = Dict(
    "A1g" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2g" => [[1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "Eg"  => [[1 0;0 1],[1 0;0 1],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],
              [1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[1 0;0 -1],[-c3 s3;s3 c3]],
    "A1u" => [[1],[-1],[1],[1],[-1],[-1],[1],[1],[1],[-1],[-1],[-1]],
    "A2u" => [[1],[-1],[1],[1],[-1],[-1],[-1],[-1],[-1],[1],[1],[1]],
    "Eu"  => [[1 0;0 1],[-1 0;0 -1],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[c3 -s3;s3 c3],[c3 s3;-s3 c3],
              [1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 s3;s3 c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3]])

irrm_D4d = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "B1" => [[1],[1],[1],[1],[-1],[-1],[-1],[-1],[1],[1],[1],[1],[-1],[-1],[-1],[-1]],
    "B2" => [[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[1],[1],[1],[1]],
    "E1" => [[1 0;0 1],[0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],[c4 -s4;s4 c4],[-c4 -s4;s4 -c4],[-c4 s4;-s4 -c4],[c4 s4;-s4 c4],
             [1 0;0 -1],[-1 0;0 1],[0 1;1 0],[0 -1;-1 0],[c4 s4;s4 -c4],[-c4 s4;s4 c4],[-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4]],
    "E2" => [[1 0;0 1],[-1 0;0 -1],[1 0;0 1],[-1 0;0 -1],[0 -1;1 0],[0 1;-1 0],[0 -1;1 0],[0 1;-1 0],
             [1 0;0 -1],[1 0;0 -1],[-1 0;0 1],[-1 0;0 1],[0 1;1 0],[0 -1;-1 0],[0 1;1 0],[0 -1;-1 0]],
    "E3" => [[1 0;0 1],[0 -1;1 0],[-1 0;0 -1],[0 1;-1 0],[-c4 s4;-s4 -c4],[c4 s4;-s4 c4],[c4 -s4;s4 c4],[-c4 -s4;s4 -c4],
             [1 0;0 -1],[-1 0;0 1],[0 1;1 0],[0 -1;-1 0],[-c4 -s4;-s4 c4],[c4 -s4;-s4 -c4],[c4 s4;s4 -c4],[-c4 s4;s4 c4]])

irrm_D5d = Dict(
    "A1g" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],
              [1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2g" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],
              [-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "E1g" => [[1 0;0 1],[1 0;0 1],
             [c25 -s25; s25 c25],[-c5 -s5; s5 -c5],[-c5 s5; -s5 -c5],[c25 s25; -s25 c25], # C_5s
             [-c5 s5; -s5 -c5],[c25 s25; -s25 c25],[c25 -s25; s25 c25],[-c5 -s5; s5 -c5], # S_10s
             [1 0;0 -1],[-c5 s5; s5 c5],[c25 -s25; -s25 -c25],[c25 s25; s25 -c25],[-c5 -s5; -s5 c5], # C_2s
             [-c5 -s5; -s5 c5],[c25 -s25; -s25 -c25],[1 0;0 -1],[c25 s25; s25 -c25],[-c5 s5; s5 c5]], # σds 
    "E2g" => [[1 0;0 1],[1 0;0 1],
             [-c5 -s5; s5 -c5],[c25 s25; -s25 c25],[c25 -s25; s25 c25],[-c5 s5; -s5 -c5],
             [c25 -s25; s25 c25],[-c5 s5; -s5 -c5],[-c5 -s5; s5 -c5],[c25 s25; -s25 c25],
             [1 0;0 -1],[c25 -s25; -s25 -c25],[-c5 -s5; -s5 c5],[-c5 s5; s5 c5],[c25 s25; s25 -c25],
             [c25 s25; s25 -c25],[-c5 -s5; -s5 c5],[1 0;0 -1],[-c5 s5; s5 c5],[c25 -s25; -s25 -c25]],
    "A1u" => [[1],[-1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],
              [1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1]],
    "A2u" => [[1],[-1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],
              [-1],[-1],[-1],[-1],[-1],[1],[1],[1],[1],[1]],
    "E1u" => [[1 0;0 1],[-1 0;0 -1],
             [c25 -s25; s25 c25],[-c5 -s5; s5 -c5],[-c5 s5; -s5 -c5],[c25 s25; -s25 c25], # C_5s
             [c5 -s5; s5 c5],[-c25 -s25; s25 -c25],[-c25 s25; -s25 -c25],[c5 s5; -s5 c5], # S_10s
             [1 0;0 -1],[-c5 s5; s5 c5],[c25 -s25; -s25 -c25],[c25 s25; s25 -c25],[-c5 -s5; -s5 c5], # C_2s
             [c5 s5; s5 -c5],[-c25 s25; s25 c25],[-1 0;0 1],[-c25 -s25; -s25 c25],[c5 -s5; -s5 -c5]], # σds 
    "E2u" => [[1 0;0 1],[-1 0;0 -1],
             [-c5 -s5; s5 -c5],[c25 s25; -s25 c25],[c25 -s25; s25 c25],[-c5 s5; -s5 -c5],
             [-c25 s25; -s25 -c25],[c5 -s5; s5 c5],[c5 s5; -s5 c5],[-c25 -s25; s25 -c25],
             [1 0;0 -1],[c25 -s25; -s25 -c25],[-c5 -s5; -s5 c5],[-c5 s5; s5 c5],[c25 s25; s25 -c25],
             [-c25 -s25; -s25 c25],[c5 s5; s5 -c5],[-1 0;0 1],[c5 -s5; -s5 -c5],[-c25 s25; s25 c25]])

irrm_D6d = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],
             [1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],
             [-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "B1" => [[1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1],
             [1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "B2" => [[1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1],
             [-1],[-1],[-1],[-1],[-1],[-1],[1],[1],[1],[1],[1],[1]],
    "E1" => [[1 0;0 1],[c3 -s3;s3 c3],[-c3 -s3;s3 -c3],[-1 0;0 -1],[-c3 s3;-s3 -c3],[c3 s3;-s3 c3],
             [s3 -c3;c3 s3],[0 -1;1 0],[-s3 -c3;c3 -s3],[-s3 c3;-c3 -s3],[0 1;-1 0],[s3 c3;-c3 s3],
             [1 0;0 -1],[-c3 s3;s3 c3],[-c3 -s3;-s3 c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3],
             [s3 c3;c3 -s3],[0 1;1 0],[-s3 c3;c3 s3],[-s3 -c3;-c3 s3],[0 -1;-1 0],[s3 -c3;-c3 -s3]],
    "E2" => [[1 0;0 1],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[1 0;0 1],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],
             [c3 -s3;s3 c3],[-1 0;0 -1],[c3 s3;-s3 c3],[c3 -s3;s3 c3],[-1 0;0 -1],[c3 s3;-s3 c3],
             [1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 s3;s3 c3],[-c3 s3;s3 c3],[1 0;0 -1],[-c3 -s3;-s3 c3],
             [c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3]],
    "E3" => [[1 0;0 1],[-1 0;0 -1],[1 0;0 1],[-1 0;0 -1],[1 0;0 1],[-1 0;0 -1],
             [0 1;-1 0],[0 -1;1 0],[0 1;-1 0],[0 -1;1 0],[0 1;-1 0],[0 -1;1 0],
             [-1 0;0 1],[-1 0;0 1],[-1 0;0 1],[1 0;0 -1],[1 0;0 -1],[1 0;0 -1],
             [0 1;1 0],[0 -1;-1 0],[0 1;1 0],[0 -1;-1 0],[0 1;1 0],[0 -1;-1 0]],
    "E4" => [[1 0;0 1],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[1 0;0 1],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],
             [-c3 s3;-s3 -c3],[1 0;0 1],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[1 0;0 1],[-c3 -s3;s3 -c3],
             [-1 0;0 1],[c3 s3;s3 -c3],[c3 -s3;-s3 -c3],[c3 -s3;-s3 -c3],[-1 0;0 1],[c3 s3;s3 -c3],
             [c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3],[c3 s3;s3 -c3],[-1 0;0 1],[c3 -s3;-s3 -c3]],
    "E5" => [[1 0;0 1],[c3 -s3;s3 c3],[-c3 -s3;s3 -c3],[-1 0;0 -1],[-c3 s3;-s3 -c3],[c3 s3;-s3 c3],
             [-s3 c3;-c3 -s3],[0 1;-1 0],[s3 c3;-c3 s3],[s3 -c3;c3 s3],[0 -1;1 0],[-s3 -c3;c3 -s3],
             [-1 0;0 1],[c3 -s3;-s3 -c3],[c3 s3;s3 -c3],[-c3 -s3;-s3 c3],[1 0;0 -1],[-c3 s3;s3 c3],
             [s3 c3;c3 -s3],[0 1;1 0],[-s3 c3;c3 s3],[-s3 -c3;-c3 s3],[0 -1;-1 0],[s3 -c3;-c3 -s3]])

irrm_T = Dict(
    "A"   => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "E_1" => [[1],[e3],[ce3],[e3],[ce3],[e3],[ce3],[e3],[ce3],[1],[1],[1]],
    "E_2" => [[1],[ce3],[e3],[ce3],[e3],[ce3],[e3],[ce3],[e3],[1],[1],[1]],
    "T"   => [[1 0 0;0 1 0;0 0 1],[0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],[0 0 1;-1 0 0;0 -1 0],[0 -1 0;0 0 -1;1 0 0],
              [0 0 -1;1 0 0;0 -1 0],[0 1 0;0 0 -1;-1 0 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 0;0 0 1;-1 0 0],
              [1 0 0;0 -1 0;0 0 -1],[-1 0 0;0 1 0;0 0 -1],[-1 0 0;0 -1 0;0 0 1]])

irrm_Th = Dict(
    "Ag"  => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],
              [1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "Eg1" => [[1],[e3],[ce3],[e3],[ce3],[e3],[ce3],[e3],[ce3],[1],[1],[1],
              [1],[ce3],[e3],[ce3],[e3],[ce3],[e3],[ce3],[e3],[1],[1],[1]],
    "Eg2" => [[1],[ce3],[e3],[ce3],[e3],[ce3],[e3],[ce3],[e3],[1],[1],[1],
              [1],[e3],[ce3],[e3],[ce3],[e3],[ce3],[e3],[ce3],[1],[1],[1]],
    "Tg"  => [[1 0 0;0 1 0;0 0 1],[0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],[0 0 1;-1 0 0;0 -1 0],[0 -1 0;0 0 -1;1 0 0],
              [0 0 -1;1 0 0;0 -1 0],[0 1 0;0 0 -1;-1 0 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 0;0 0 1;-1 0 0],
              [1 0 0;0 -1 0;0 0 -1],[-1 0 0;0 1 0;0 0 -1],[-1 0 0;0 -1 0;0 0 1],
              [1 0 0;0 1 0;0 0 1],[0 1 0;0 0 1;1 0 0],[0 0 1;1 0 0;0 1 0],[0 -1 0;0 0 -1;1 0 0],[0 0 1;-1 0 0;0 -1 0],
              [0 1 0;0 0 -1;-1 0 0],[0 0 -1;1 0 0;0 -1 0],[0 -1 0;0 0 1;-1 0 0],[0 0 -1;-1 0 0;0 1 0],
              [1 0 0;0 -1 0;0 0 -1],[-1 0 0;0 1 0;0 0 -1],[-1 0 0;0 -1 0;0 0 1]],
    "Au"  => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],
              [-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "Eu1" => [[1],[e3],[ce3],[e3],[ce3],[e3],[ce3],[e3],[ce3],[1],[1],[1],
              [-1],[-ce3],[-e3],[-ce3],[-e3],[-ce3],[-e3],[-ce3],[-e3],[-1],[-1],[-1]],
    "Eu2" => [[1],[ce3],[e3],[ce3],[e3],[ce3],[e3],[ce3],[e3],[1],[1],[1],
              [-1],[-e3],[-ce3],[-e3],[-ce3],[-e3],[-ce3],[-e3],[-ce3],[-1],[-1],[-1]],
    "Tu"  => [[1 0 0;0 1 0;0 0 1],[0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],[0 0 1;-1 0 0;0 -1 0],[0 -1 0;0 0 -1;1 0 0],
              [0 0 -1;1 0 0;0 -1 0],[0 1 0;0 0 -1;-1 0 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 0;0 0 1;-1 0 0],
              [1 0 0;0 -1 0;0 0 -1],[-1 0 0;0 1 0;0 0 -1],[-1 0 0;0 -1 0;0 0 1],
              [-1 0 0;0 -1 0;0 0 -1],[0 -1 0;0 0 -1;-1 0 0],[0 0 -1;-1 0 0;0 -1 0],[0 1 0;0 0 1;-1 0 0],[0 0 -1;1 0 0;0 1 0],
              [0 -1 0;0 0 1;1 0 0],[0 0 1;-1 0 0;0 1 0],[0 1 0;0 0 -1;1 0 0],[0 0 1;1 0 0;0 -1 0],
              [-1 0 0;0 1 0;0 0 1],[1 0 0;0 -1 0;0 0 1],[1 0 0;0 1 0;0 0 -1]])

irrm_Td  = Dict(
    "A1" => [ [1], # E
              [1], [1], [1], [1], [1], [1], [1], [1], # C3
              [1], [1], [1], # C2
              [1], [1], [1], [1], [1], [1], # σd
              [1], [1], [1], [1], [1], [1]], # S4
    "A2" => [ [1], 
              [1], [1], [1], [1], [1], [1], [1], [1], 
              [1], [1], [1], 
              [-1],[-1],[-1],[-1],[-1],[-1],
              [-1],[-1],[-1],[-1],[-1],[-1]],
    "E"  => [[1 0;0 1],
             [-c3 -s3; s3 -c3],[-c3 s3; -s3 -c3],[-c3 -s3; s3 -c3],[-c3 s3; -s3 -c3],[-c3 -s3; s3 -c3],[-c3 s3; -s3 -c3],[-c3 -s3; s3 -c3],[-c3 s3; -s3 -c3],
             [1 0;0 1],[1 0;0 1],[1 0;0 1],
             [1 0; 0 -1],[1 0; 0 -1],[-c3 s3; s3 c3],[-c3 s3; s3 c3],[-c3 -s3; -s3 c3],[-c3 -s3; -s3 c3],
             [-c3 -s3; -s3 c3],[-c3 -s3; -s3 c3],[-c3 s3; s3 c3],[-c3 s3; s3 c3],[1 0;0 -1],[1 0;0 -1]],
    "T1" => [[1 0 0;0 1 0;0 0 1], # E
             [0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],[0 0 1;-1 0 0;0 -1 0],[0 -1 0;0 0 -1;1 0 0], # C3 (α,β)
             [0 0 -1;1 0 0;0 -1 0],[0 1 0;0 0 -1;-1 0 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 0;0 0 1;-1 0 0], # C3 (γ,δ)
             [1 0 0;0 -1 0;0 0 -1],[-1 0 0;0 1 0;0 0 -1],[-1 0 0;0 -1 0;0 0 1], # C2 (x,y,z)
             [0 1 0;1 0 0;0 0 -1],[0 -1 0;-1 0 0;0 0 -1],[0 0 1;0 -1 0;1 0 0],[0 0 -1;0 -1 0;-1 0 0],[-1 0 0;0 0 1;0 1 0],[-1 0 0;0 0 -1;0 -1 0], # σd (xy,xz,yz)
             [1 0 0;0 0 1;0 -1 0],[1 0 0;0 0 -1;0 1 0],[0 0 -1;0 1 0;1 0 0],[0 0 1;0 1 0;-1 0 0],[0 1 0;-1 0 0;0 0 1],[0 -1 0;1 0 0;0 0 1]], # S4 (x,y,z)
    "T2" => [[1 0 0;0 1 0;0 0 1], # E
             [0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],[0 0 1;-1 0 0;0 -1 0],[0 -1 0;0 0 -1;1 0 0], # C3 (α,β)
             [0 0 -1;1 0 0;0 -1 0],[0 1 0;0 0 -1;-1 0 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 0;0 0 1;-1 0 0], # C3 (γ,δ)
             [1 0 0;0 -1 0;0 0 -1],[-1 0 0;0 1 0;0 0 -1],[-1 0 0;0 -1 0;0 0 1], # C2 (x,y,z)
             [0 -1 0;-1 0 0;0 0 1],[0 1 0;1 0 0;0 0 1],[0 0 -1;0 1 0;-1 0 0],[0 0 1;0 1 0;1 0 0],[1 0 0;0 0 -1;0 -1 0],[1 0 0;0 0 1;0 1 0], # σd (xy,xz,yz)
             [-1 0 0;0 0 -1;0 1 0],[-1 0 0;0 0 1;0 -1 0],[0 0 1;0 -1 0;-1 0 0],[0 0 -1;0 -1 0;1 0 0],[0 -1 0;1 0 0;0 0 -1],[0 1 0;-1 0 0;0 0 -1]]) # S4 (x,y,z)
irrm_O = Dict(
    "A1" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1]],
    "A2" => [[1],[-1],[1],[-1],[-1],[1],[-1],[-1],[1],[-1],[1],[1],[1],[1],[1],[1],[1],[1],[-1],[-1],[-1],[-1],[-1],[-1]],
    "E" => [[1 0;0 1],
            [-c3 -s3;-s3 c3],[1 0;0 1],[-c3 -s3;-s3 c3],
            [-c3 s3;s3 c3],[1 0;0 1],[-c3 s3;s3 c3],
            [1 0;0 -1],[1 0;0 1],[1 0;0 -1],
            [-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],
            [-c3 s3;s3 c3],[-c3 s3;s3 c3],[1 0;0 -1],[1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 -s3;-s3 c3]],
    "T1" =>[[1 0 0;0 1 0;0 0 1],[1 0 0;0 0 -1;0 1 0],[1 0 0;0 -1 0;0 0 -1],[1 0 0;0 0 1;0 -1 0],[0 0 1;0 1 0;-1 0 0],[-1 0 0;0 1 0;0 0 -1],
            [0 0 -1;0 1 0;1 0 0],[0 -1 0;1 0 0;0 0 1],[-1 0 0;0 -1 0;0 0 1],[0 1 0;-1 0 0;0 0 1],[0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],
            [0 -1 0;0 0 -1;1 0 0],[0 -0 1;-1 0 -0;0 -1 0],[0 1 0;0 0 -1;-1 0 0],[0 0 -1;1 0 -0;-0 -1 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 -0;-0 0 1;-1 0 0],
            [0 0 1;0 -1 0;1 0 0],[0 0 -1;0 -1 0;-1 0 0],[0 1 0;1 0 0;0 0 -1],[0 -1 0;-1 0 0;0 0 -1],[-1 0 0;0 0 1;0 1 0],[-1 0 0;0 0 -1;0 -1 0]],
    "T2" =>[[1 0 0;0 1 0;0 0 1],[-1 0 0;0 0 1;0 -1 0],[1 0 0;0 -1 0;0 0 -1],[-1 0 0;0 0 -1;0 1 0],[0 0 -1;0 -1 0;1 0 0],[-1 0 0;0 1 0;0 0 -1],
            [0 0 1;0 -1 0;-1 0 0],[0 1 0;-1 0 0;0 0 -1],[-1 0 0;0 -1 0;0 0 1],[0 -1 0;1 0 0;0 0 -1],[0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],
            [0 -1 0;0 0 -1;1 0 0],[0 -0 1;-1 0 -0;0 -1 0],[0 1 0;0 0 -1;-1 0 0],[0 0 -1;1 0 -0;-0 -1 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 -0;-0 0 1;-1 0 0],
            [0 0 -1;0 1 0;-1 0 0],[0 0 1;0 1 0;1 0 0],[0 -1 0;-1 0 0;0 0 1],[0 1 0;1 0 0;0 0 1],[1 0 0;0 0 -1;0 -1 0],[1 0 0;0 0 1;0 1 0]])
irrm_Oh = Dict(
    "A1g" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],
                 [1],[1],[1],[1],[1],[1],[1],[1],
                 [1],[1],[1],[1],[1],[1],
             [1],[1],[1],[1],[1],[1],[1],[1],[1],[1],
                 [1],[1],[1],[1],[1],[1],[1],[1],
                 [1],[1],[1],[1],[1],[1]],
    "A2g" => [[1],[-1],[1],[-1],[-1],[1],[-1],[-1],[1],[-1],
                 [1],[1],[1],[1],[1],[1],[1],[1],
                 [-1],[-1],[-1],[-1],[-1],[-1],
             [1],[-1],[1],[-1],[-1],[1],[-1],[-1],[1],[-1],
                 [1],[1],[1],[1],[1],[1],[1],[1],
                 [-1],[-1],[-1],[-1],[-1],[-1]],
    "Eg" => [[1 0;0 1],
            [-c3 -s3;-s3 c3],[1 0;0 1],[-c3 -s3;-s3 c3],
            [-c3 s3;s3 c3],[1 0;0 1],[-c3 s3;s3 c3],
            [1 0;0 -1],[1 0;0 1],[1 0;0 -1],
            [-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],
            [-c3 s3;s3 c3],[-c3 s3;s3 c3],[1 0;0 -1],[1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 -s3;-s3 c3],
            [1 0;0 1],
            [-c3 -s3;-s3 c3],[1 0;0 1],[-c3 -s3;-s3 c3],
            [-c3 s3;s3 c3],[1 0;0 1],[-c3 s3;s3 c3],
            [1 0;0 -1],[1 0;0 1],[1 0;0 -1],
            [-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],
            [-c3 s3;s3 c3],[-c3 s3;s3 c3],[1 0;0 -1],[1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 -s3;-s3 c3]],
    "T1g" =>[[1 0 0;0 1 0;0 0 1],[1 0 0;0 0 -1;0 1 0],[1 0 0;0 -1 0;0 0 -1],[1 0 0;0 0 1;0 -1 0],
                                [0 0 1;0 1 0;-1 0 0],[-1 0 0;0 1 0;0 0 -1],[0 0 -1;0 1 0;1 0 0],
                                [0 -1 0;1 0 0;0 0 1],[-1 0 0;0 -1 0;0 0 1],[0 1 0;-1 0 0;0 0 1],
            [0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],[0 -1 0;0 0 -1;1 0 0],[0 -0 1;-1 0 -0;0 -1 0],
            [0 1 0;0 0 -1;-1 0 0],[0 0 -1;1 0 -0;-0 -1 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 -0;-0 0 1;-1 0 0],
            [0 0 1;0 -1 0;1 0 0],[0 0 -1;0 -1 0;-1 0 0],[0 1 0;1 0 0;0 0 -1],[0 -1 0;-1 0 0;0 0 -1],[-1 0 0;0 0 1;0 1 0],[-1 0 0;0 0 -1;0 -1 0],
            [1 0 0;0 1 0;0 0 1],[1 0 0;0 0 1;0 -1 0],[1 0 0;0 -1 0;0 0 -1],[1 0 0;0 0 -1;0 1 0],
                                [0 0 -1;0 1 0;1 0 0],[-1 0 0;0 1 0;0 0 -1],[0 0 1;0 1 0;-1 0 0],
                                [0 1 0;-1 0 0;0 0 1],[-1 0 0;0 -1 0;0 0 1],[0 -1 0;1 0 0;0 0 1],
            [0 1 0;0 0 1;1 0 0],[0 0 1;1 0 0;0 1 0],[0 -0 1;-1 0 -0;0 -1 0],[0 -1 0;0 0 -1;1 0 0],
            [0 0 -1;1 0 -0;-0 -1 0],[0 1 0;0 0 -1;-1 0 0],[0 -1 -0;-0 0 1;-1 0 0],[0 0 -1;-1 0 0;0 1 0],
            [0 0 1;0 -1 0;1 0 0],[0 0 -1;0 -1 0;-1 0 0],[0 1 0;1 0 0;0 0 -1],[0 -1 0;-1 0 0;0 0 -1],[-1 0 0;0 0 1;0 1 0],[-1 0 0;0 0 -1;0 -1 0]],
    "T2g" =>[[1 0 0;0 1 0;0 0 1],[-1 0 0;0 0 1;0 -1 0],[1 0 0;0 -1 0;0 0 -1],[-1 0 0;0 0 -1;0 1 0],
                                [0 0 -1;0 -1 0;1 0 0],[-1 0 0;0 1 0;0 0 -1],[0 0 1;0 -1 0;-1 0 0],
                                [0 1 0;-1 0 0;0 0 -1],[-1 0 0;0 -1 0;0 0 1],[0 -1 0;1 0 0;0 0 -1],
            [0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],[0 -1 0;0 0 -1;1 0 0],[0 -0 1;-1 0 -0;0 -1 0],
            [0 1 0;0 0 -1;-1 0 0],[0 0 -1;1 0 -0;-0 -1 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 -0;-0 0 1;-1 0 0],
            [0 0 -1;0 1 0;-1 0 0],[0 0 1;0 1 0;1 0 0],[0 -1 0;-1 0 0;0 0 1],[0 1 0;1 0 0;0 0 1],[1 0 0;0 0 -1;0 -1 0],[1 0 0;0 0 1;0 1 0],
            [1 0 0;0 1 0;0 0 1],[-1 0 0;0 0 -1;0 1 0],[1 0 0;0 -1 0;0 0 -1],[-1 0 0;0 0 1;0 -1 0],
                                [0 0 1;0 -1 0;-1 0 0],[-1 0 0;0 1 0;0 0 -1],[0 0 -1;0 -1 0;1 0 0],
                                [0 -1 0;1 0 0;0 0 -1],[-1 0 0;0 -1 0;0 0 1],[0 1 0;-1 0 0;0 0 -1],
            [0 1 0;0 0 1;1 0 0],[0 0 1;1 0 0;0 1 0],[0 -0 1;-1 0 -0;0 -1 0],[0 -1 0;0 0 -1;1 0 0],
            [0 0 -1;1 0 -0;-0 -1 0],[0 1 0;0 0 -1;-1 0 0],[0 -1 -0;-0 0 1;-1 0 0],[0 0 -1;-1 0 0;0 1 0],
            [0 0 -1;0 1 0;-1 0 0],[0 0 1;0 1 0;1 0 0],[0 -1 0;-1 0 0;0 0 1],[0 1 0;1 0 0;0 0 1],[1 0 0;0 0 -1;0 -1 0],[1 0 0;0 0 1;0 1 0]],
    "A1u" => [[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],
                 [1],[1],[1],[1],[1],[1],[1],[1],
                 [1],[1],[1],[1],[1],[1],
             [-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],
                 [-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],
                 [-1],[-1],[-1],[-1],[-1],[-1]],
    "A2u" => [[1],[-1],[1],[-1],[-1],[1],[-1],[-1],[1],[-1],
                 [1],[1],[1],[1],[1],[1],[1],[1],
                 [-1],[-1],[-1],[-1],[-1],[-1],
             [-1],[1],[-1],[1],[1],[-1],[1],[1],[-1],[1],
                 [-1],[-1],[-1],[-1],[-1],[-1],[-1],[-1],
                 [1],[1],[1],[1],[1],[1]],
    "Eu" => [[1 0;0 1],
            [-c3 -s3;-s3 c3],[1 0;0 1],[-c3 -s3;-s3 c3],
            [-c3 s3;s3 c3],[1 0;0 1],[-c3 s3;s3 c3],
            [1 0;0 -1],[1 0;0 1],[1 0;0 -1],
            [-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],[-c3 -s3;s3 -c3],[-c3 -s3;s3 -c3],[-c3 s3;-s3 -c3],
            [-c3 s3;s3 c3],[-c3 s3;s3 c3],[1 0;0 -1],[1 0;0 -1],[-c3 -s3;-s3 c3],[-c3 -s3;-s3 c3],
            -1*[1 0;0 1],
            -1*[-c3 -s3;-s3 c3],-1*[1 0;0 1],-1*[-c3 -s3;-s3 c3],
            -1*[-c3 s3;s3 c3],-1*[1 0;0 1],-1*[-c3 s3;s3 c3],
            -1*[1 0;0 -1],-1*[1 0;0 1],-1*[1 0;0 -1],
            -1*[-c3 s3;-s3 -c3],-1*[-c3 -s3;s3 -c3],-1*[-c3 -s3;s3 -c3],-1*[-c3 s3;-s3 -c3],-1*[-c3 -s3;s3 -c3],-1*[-c3 s3;-s3 -c3],-1*[-c3 s3;-s3 -c3],-1*[-c3 -s3;s3 -c3],
            -1*[-c3 s3;s3 c3],-1*[-c3 s3;s3 c3],-1*[1 0;0 -1],-1*[1 0;0 -1],-1*[-c3 -s3;-s3 c3],-1*[-c3 -s3;-s3 c3]],
    "T1u" =>[[1 0 0;0 1 0;0 0 1],[1 0 0;0 0 -1;0 1 0],[1 0 0;0 -1 0;0 0 -1],[1 0 0;0 0 1;0 -1 0],
                                [0 0 1;0 1 0;-1 0 0],[-1 0 0;0 1 0;0 0 -1],[0 0 -1;0 1 0;1 0 0],
                                [0 -1 0;1 0 0;0 0 1],[-1 0 0;0 -1 0;0 0 1],[0 1 0;-1 0 0;0 0 1],
            [0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],[0 -1 0;0 0 -1;1 0 0],[0 -0 1;-1 0 -0;0 -1 0],
            [0 1 0;0 0 -1;-1 0 0],[0 0 -1;1 0 -0;-0 -1 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 -0;-0 0 1;-1 0 0],
            [0 0 1;0 -1 0;1 0 0],[0 0 -1;0 -1 0;-1 0 0],[0 1 0;1 0 0;0 0 -1],[0 -1 0;-1 0 0;0 0 -1],[-1 0 0;0 0 1;0 1 0],[-1 0 0;0 0 -1;0 -1 0],
            -1*[1 0 0;0 1 0;0 0 1],-1*[1 0 0;0 0 1;0 -1 0],-1*[1 0 0;0 -1 0;0 0 -1],-1*[1 0 0;0 0 -1;0 1 0],
                                   -1*[0 0 -1;0 1 0;1 0 0],-1*[-1 0 0;0 1 0;0 0 -1],-1*[0 0 1;0 1 0;-1 0 0],
                                   -1*[0 1 0;-1 0 0;0 0 1],-1*[-1 0 0;0 -1 0;0 0 1],-1*[0 -1 0;1 0 0;0 0 1],
            -1*[0 1 0;0 0 1;1 0 0],-1*[0 0 1;1 0 0;0 1 0],-1*[0 -0 1;-1 0 -0;0 -1 0],-1*[0 -1 0;0 0 -1;1 0 0],
            -1*[0 0 -1;1 0 -0;-0 -1 0],-1*[0 1 0;0 0 -1;-1 0 0],-1*[0 -1 -0;-0 0 1;-1 0 0],-1*[0 0 -1;-1 0 0;0 1 0],
            -1*[0 0 1;0 -1 0;1 0 0],-1*[0 0 -1;0 -1 0;-1 0 0],-1*[0 1 0;1 0 0;0 0 -1],-1*[0 -1 0;-1 0 0;0 0 -1],-1*[-1 0 0;0 0 1;0 1 0],-1*[-1 0 0;0 0 -1;0 -1 0]],
    "T2u" =>[[1 0 0;0 1 0;0 0 1],[-1 0 0;0 0 1;0 -1 0],[1 0 0;0 -1 0;0 0 -1],[-1 0 0;0 0 -1;0 1 0],
                                [0 0 -1;0 -1 0;1 0 0],[-1 0 0;0 1 0;0 0 -1],[0 0 1;0 -1 0;-1 0 0],
                                [0 1 0;-1 0 0;0 0 -1],[-1 0 0;0 -1 0;0 0 1],[0 -1 0;1 0 0;0 0 -1],
            [0 0 1;1 0 0;0 1 0],[0 1 0;0 0 1;1 0 0],[0 -1 0;0 0 -1;1 0 0],[0 -0 1;-1 0 -0;0 -1 0],
            [0 1 0;0 0 -1;-1 0 0],[0 0 -1;1 0 -0;-0 -1 0],[0 0 -1;-1 0 0;0 1 0],[0 -1 -0;-0 0 1;-1 0 0],
            [0 0 -1;0 1 0;-1 0 0],[0 0 1;0 1 0;1 0 0],[0 -1 0;-1 0 0;0 0 1],[0 1 0;1 0 0;0 0 1],[1 0 0;0 0 -1;0 -1 0],[1 0 0;0 0 1;0 1 0],
            -1*[1 0 0;0 1 0;0 0 1],-1*[-1 0 0;0 0 -1;0 1 0],-1*[1 0 0;0 -1 0;0 0 -1],-1*[-1 0 0;0 0 1;0 -1 0],
                                   -1*[0 0 1;0 -1 0;-1 0 0],-1*[-1 0 0;0 1 0;0 0 -1],-1*[0 0 -1;0 -1 0;1 0 0],
                                   -1*[0 -1 0;1 0 0;0 0 -1],-1*[-1 0 0;0 -1 0;0 0 1],-1*[0 1 0;-1 0 0;0 0 -1],
            -1*[0 1 0;0 0 1;1 0 0],-1*[0 0 1;1 0 0;0 1 0],-1*[0 -0 1;-1 0 -0;0 -1 0],-1*[0 -1 0;0 0 -1;1 0 0],
            -1*[0 0 -1;1 0 -0;-0 -1 0],-1*[0 1 0;0 0 -1;-1 0 0],-1*[0 -1 -0;-0 0 1;-1 0 0],-1*[0 0 -1;-1 0 0;0 1 0],
            -1*[0 0 -1;0 1 0;-1 0 0],-1*[0 0 1;0 1 0;1 0 0],-1*[0 -1 0;-1 0 0;0 0 1],-1*[0 1 0;1 0 0;0 0 1],-1*[1 0 0;0 0 -1;0 -1 0],-1*[1 0 0;0 0 1;0 1 0]])

irrm_I = generate_irrm_I()
irrm_Ih = generate_irrm_Ih()

function irrep_things(pg)
    irrm = eval(Meta.parse("irrm_"*pg))
    symels = pg_to_symels(pg)
    mtable = build_mult_table(symels)
    mtab_chks = true
    for k in keys(irrm)
        mtab_chk = mtable_check(k, irrm[k], mtable)
        if mtab_chk == false
            mtab_chks = false
        end
    end
    gchk = goat_chk(irrm)
    return mtab_chks, gchk
end

function mtable_check(k, irrm, mtable)
    l = size(mtable)[1]
    for i = 1:l, j = 1:l
        if mtable[i,j] ∈ multifly(irrm, i, j)
            continue
        else
            println("Irrep. $k\nMat. 1: $(irrm[i])\nMat. 2: $(irrm[j])")
            println("Multiplying $i and $j")
            println(multifly(irrm, i, j))
            return false
        end
    end
    return true
end

function multifly(irrm, a, b)
    l = length(irrm)
    out = []
    errl = []
    for i = 1:l
        if size(irrm[a])[1] == 1
            r = [irrm[a][1]*irrm[b][1]]
        else
            r = irrm[a]*irrm[b]
        end
        push!(errl, r)
        if isapprox(irrm[i], r, atol = 1e-10)
            push!(out, i)
        end
    end
    return out
    return 0
end

function goat_chk(irrm::Dict)
    return_full_chk = false
    l = length(irrm)
    gc_final = []
    for (a,μ) in enumerate(keys(irrm)), (b,ν) in enumerate(keys(irrm))
        g = length(irrm[μ])
        d1 = size(irrm[μ][1])[1]
        d2 = size(irrm[ν][1])[1]
        if return_full_chk
            gc = zeros(d1,d2,d1,d2)
        end
        for i = 1:d1, j = 1:d2
            for l = 1:d1, m = 1:d2
                gchk = goat_chk(irrm[μ], irrm[ν], i,j,l,m)
                if μ == ν && i == j && l == m
                    expected = g / d1
                else
                    expected = 0
                end
                if return_full_chk
                    gc[i,j,l,m] = gchk
                elseif isapprox(gchk, expected, atol=1E-10)
                    continue
                else
                    #return false
                    throw(ArgumentError("GOAT Check failed for irreps $(μ) and $(ν), and indices $(i),$(l),$(j),$(m). Returned value $(gchk). Expected value $(expected)"))
                end
            end
        end
        if return_full_chk
            push!(gc_final, [μ,ν,gc])
        end
    end
    if return_full_chk
        return gc_final
    else
        return true
    end
end

function goat_chk(irrm1, irrm2, i, j, l, m)
    a = 0
    for r = 1:length(irrm1)
        a += conj(irrm1[r][i,l])*irrm2[r][j,m]
    end
    return a
end